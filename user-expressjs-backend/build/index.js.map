{"version":3,"sources":["../src/index.js"],"names":["app","port","process","env","PORT","use","req","res","next","header","json","urlencoded","extended","static","join","__dirname","Promise","global","connect","useMongoClient","install","get","authenticate","scope","failureRedirect","console","log","user","usertoken","localStorage","setItem","redirect","end","status","send","listen"],"mappings":";;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAGA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA;AAlBA;AAmBA,IAAMA,MAAM,wBAAZ;;AAEA;;;AAVA;AAWA,IAAMC,OAAOC,QAAQC,GAAR,CAAYC,IAAZ,IAAoB,IAAjC;;AAEA;AACAJ,IAAIK,GAAJ,CAAQ,UAACC,GAAD,EAAKC,GAAL,EAASC,IAAT,EAAkB;AACxBD,MAAIE,MAAJ,CAAW,6BAAX,EAA0C,GAA1C;AACAF,MAAIE,MAAJ,CAAW,8BAAX,EAA2C,mCAA3C;AACAF,MAAIE,MAAJ,CAAW,8BAAX,EAA2C,iFAA3C;AACAD;AACD,CALD;;AAOA;AACAR,IAAIK,GAAJ,CAAQ,sBAAO,KAAP,CAAR;AACAL,IAAIK,GAAJ,CAAQ,qBAAWK,IAAX,EAAR;AACAV,IAAIK,GAAJ,CAAQ,qBAAWM,UAAX,CAAsB,EAACC,UAAS,IAAV,EAAtB,CAAR;AACAZ,IAAIK,GAAJ,CAAQ,kBAAQQ,MAAR,CAAe,eAAKC,IAAL,CAAUC,SAAV,EAAqB,QAArB,CAAf,CAAR;AACAf,IAAIK,GAAJ,CAAQ,kBAAQQ,MAAR,CAAe,QAAf,CAAR;;AAEA;AACA,iDAAuBb,GAAvB;;AAGA;AACA,mBAASgB,OAAT,GAAmBC,OAAOD,OAA1B;AACA,mBAASE,OAAT,CAAiB,yCAAjB,EAA4D;AAC1DC,kBAAe;AAD2C,CAA5D;;AAIA;AACA,2BAAiBC,OAAjB;;AAEA;AACApB,IAAIK,GAAJ,CAAQ,WAAR;AACAL,IAAIK,GAAJ,CAAQ,YAAR;AACAL,IAAIK,GAAJ,CAAQ,eAAR;AACAL,IAAIK,GAAJ,CAAQ,iBAAR;AACAL,IAAIK,GAAJ,CAAQ,aAAR;;AAEAL,IAAIqB,GAAJ,CAAQ,iBAAR,EAA2B,mBAASC,YAAT,CAAsB,UAAtB,EAAiC;AAC1DC,SAAM;AADoD,CAAjC,CAA3B;;AAICvB,IAAIqB,GAAJ,CAAQ,wBAAR,EACE,mBAASC,YAAT,CAAsB,UAAtB,EAAkC;AAChC;AACAE,mBAAiB;AAFe,CAAlC,CADF,EAKE,UAAUlB,GAAV,EAAeC,GAAf,EAAoB;AAClBkB,UAAQC,GAAR,CAAY,WAASpB,IAAIqB,IAAzB;AACAF,UAAQC,GAAR,CAAY,gBAAcpB,IAAIsB,SAA9B;AACArB,MAAIE,MAAJ,CAAW,eAAX,EAA4BH,IAAIqB,IAAhC;AACAE,eAAaC,OAAb,CAAqB,WAArB,EAAkCxB,IAAIqB,IAAtC;AACApB,MAAIwB,QAAJ,CAAa,wBAAb;AACD,CAXH;;AAcD/B,IAAIqB,GAAJ,CAAQ,GAAR,EAAa,UAACf,GAAD,EAAKC,GAAL,EAAa;AACxB,SAAOA,IAAIyB,GAAJ,CAAQ,aAAR,CAAP;AACD,CAFD;;AAIA;AACAhC,IAAIK,GAAJ,CAAQ,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC1BD,MAAI0B,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,uCAArB;AACD,CAFD;;AAIAlC,IAAImC,MAAJ,CAAWlC,IAAX,EAAiB,YAAM;AACrBwB,UAAQC,GAAR,iCAA0CzB,IAA1C;AACD,CAFD","file":"index.js","sourcesContent":["// ./user-expressjs-backend/index.js\nimport express from 'express';\nimport path from 'path';\nimport bodyParser from 'body-parser';\nimport logger from 'morgan';\nimport mongoose from 'mongoose';\nimport SourceMapSupport from 'source-map-support';\nimport config from './config/config';\nimport configureAuth from './config/configureAuth';\nimport passport from 'passport';\n\n// import routes\nimport userRoutes from './routes/user.server.route';\nimport qBankRoutes from './routes/qBank.server.route';\nimport quesRoutes from './routes/question.server.route';\nimport qbBookmarkRoutes from './routes/qBankBookMark.server.route';\nimport opTionRoutes from './routes/quesOption.server.route';\n\n// define our app using express\nconst app = express();\n\n// set the port\nconst port = process.env.PORT || 3001;\n\n// middleware to allow-cors\napp.use((req,res,next) => {\n  res.header(\"Access-Control-Allow-Origin\", \"*\");\n  res.header(\"Access-Control-Allow-Methods\", \"GET,PUT,POST,DELETE,PATCH,OPTIONS\");\n  res.header(\"Access-Control-Allow-Headers\", \"Origin, X-Requested-With, Content-Type, Accept, Authorization, X-Requested-With\");\n  next();\n});\n\n// configure the app\napp.use(logger('dev'));\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({extended:true}));\napp.use(express.static(path.join(__dirname, 'public')));\napp.use(express.static('public'));\n\n//passport configuration\nconfigureAuth(passport,app, config);\n\n\n// connect to mongodb\nmongoose.Promise = global.Promise;\nmongoose.connect('mongodb://localhost/prepare-online-mern', {\n  useMongoClient:true\n});\n\n// add Source Map Support\nSourceMapSupport.install();\n\n// connect to route\napp.use('/api/user', userRoutes);\napp.use('/api/qbank', qBankRoutes);\napp.use('/api/question',quesRoutes);\napp.use('/api/qbbookmark',qbBookmarkRoutes);\napp.use('/api/option',opTionRoutes);\n\napp.get('/login/facebook', passport.authenticate('facebook',{\n  scope:'email'\n}));\n\n app.get('/login/facebook/return',\n   passport.authenticate('facebook', {\n     //successRedirect:'http://localhost:3000/',\n     failureRedirect: 'http://localhost:3000/login'\n   }),\n   function (req, res) {\n     console.log('User: '+req.user);\n     console.log('userToken: '+req.usertoken);\n     res.header('Authorization', req.user);\n     localStorage.setItem('userToken', req.user);\n     res.redirect('http://localhost:3000/');\n   }\n );\n\napp.get('/', (req,res) => {\n  return res.end('Api working');\n})\n\n// catch 404\napp.use((req, res, next) => {\n  res.status(404).send('<h2 align=center>Page Not Found!</h2>');\n});\n\napp.listen(port, () => {\n  console.log(`App server is listening at ${port}`);\n})\n"]}