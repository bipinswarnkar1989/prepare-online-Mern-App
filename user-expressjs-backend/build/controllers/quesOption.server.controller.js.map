{"version":3,"sources":["../../src/controllers/quesOption.server.controller.js"],"names":["esClient","quesOptionCtrl","req","res","console","log","JSON","stringify","body","Options","options","forEach","element","question","ques","_id","insertMany","err","opts","json","success","message","push","el","save","next","optionsArray","optionIds","map","item","optionValues","value","update","$in","$set","multi","exec","find","remove","result"],"mappings":"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","file":"quesOption.server.controller.js","sourcesContent":["// .user-expressjs-backend/controllers/quesOption.server.controller.js\nimport Option from '../models/quesOption.server.model';\nimport Question from '../models/question.server.model';\nimport elasticsearch from 'elasticsearch';\nimport elasticClient from '../config/esSearchConfig';\nconst esClient = elasticClient;\n\nexport default class quesOptionCtrl {\n   createOption(req,res){\n       console.log('createOption: '+ JSON.stringify(req.body));\n       if (req.body) {\n           var  Options = req.body.options;\n           Options.forEach(element => {\n            element.question = req.ques._id;\n            return element;\n           });\n            Option.insertMany(Options, (err,opts) => {\n                if(err) {\n                     return res.json({success:false,message:'Something going wrong',err});\n                }\n                else{\n                  if (opts) {\n                    opts.forEach(el => {\n                      req.ques.options.push(el._id);\n                    })\n                    req.ques.save(err => {\n                      if(err){\n                        return res.json({success:false,message:'Something going wrong',err});\n                      }else{\n                        return res.json({\n                          success:true,\n                          message:'Question & Options Added to Question Bank Successfully',\n                          ques:req.ques,\n                          opts:opts\n                        });\n                      }\n                    });\n                  }\n                }\n              });\n       }\n   }\n\n   updateOption(req,res,next){\n     console.log('upadateOption: '+ req.body.options);\n     let optionsArray = req.body.options;\n     let optionIds = optionsArray.map(item => item._id);\n     let optionValues = optionsArray.map(item => item.value);\n     console.log('optionIds: '+ JSON.stringify(optionIds))\n     if (optionsArray) {\n       optionsArray.forEach(element => {\n         \n       });\n       Option.update(\n         {\n           _id:{ $in:optionIds }\n         }, {\n           $set: { value:optionValues }\n         }, {\n           multi:true\n         }\n       ).exec((err,opts) => {\n        if(err) {\n             return res.json({success:false,message:'Something going wrong',err});\n        }\n        else{\n           if (opts) {\n             console.log('RESULT: '+ JSON.stringify(opts))\n             next();\n           }\n        }\n      });\n     }\n   }\n\n   deleteOptions(req,res,next){\n     console.log('deleteOptions: '+req.ques.options);\n     let options = req.ques.options;\n     if (options) {\n       Option.find(\n         {\n           _id: { $in:options }\n         }\n       ).remove().exec((err,result) => {\n        if(err) {\n          console.log(err);\n          return res.json({success:false,message:'Something going wrong',err});\n         }else{\n           console.log(result);\n           return res.json({\n            success:true,\n            message:'Question Delete Successfully',\n            ques:req.ques\n          });\n         }\n       })\n     }\n   }\n}\n\n\n"]}