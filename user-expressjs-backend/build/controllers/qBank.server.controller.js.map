{"version":3,"sources":["../../src/controllers/qBank.server.controller.js"],"names":["esClient","storage","diskStorage","destination","req","file","cb","filename","date","Date","now","newImageName","originalname","split","length","replace","fieldname","Upload","fileFilter","console","log","mimetype","Error","single","UploadImage","res","next","err","json","createQbank","body","JSON","stringify","newQbank","image","path","save","qb","success","message","addQuestoQb","quesId","ques","_id","qbId","qbank","update","$push","questions","exec","updateQbank","id","removeImage","undefined","findOneAndUpdate","$set","populate","findOne","unlink","getAllQbanks","params","page","parseInt","limit","skip_value","find","skip","count","countQbQuestions","getqBankById","noOfQuestions","deleteqBankById","findByIdAndRemove","getLatestqBanks","sort","countQbanks","searchQbanks","q","search","eval","regex","$regex","$or","title","summary","multipleDeleteQb","remove","$in","searchQbInEs","input","rxp","index","then","resp","hits","trace"],"mappings":";;;;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AANA;AAOA,IAAMA,mCAAN;;AAEA;AACA,IAAIC,UAAU,iBAAOC,WAAP,CAAmB;AAC/BC,eAAY,qBAACC,GAAD,EAAKC,IAAL,EAAUC,EAAV,EAAiB;AAC3BA,OAAG,IAAH,EAAQ,6BAAR;AACD,GAH8B;AAI/BC,YAAS,kBAACH,GAAD,EAAKC,IAAL,EAAUC,EAAV,EAAiB;AACxB,QAAIE,OAAOC,KAAKC,GAAL,EAAX;AACA,QAAIC,eAAeN,KAAKO,YAAL,CAAkBC,KAAlB,CAAwB,GAAxB,EAA6BR,KAAKO,YAAL,CAAkBC,KAAlB,CAAwB,GAAxB,EAA6BC,MAA7B,GAAsC,CAAnE,CAAnB;AACAH,mBAAeA,aAAaI,OAAb,CAAqB,IAArB,EAA2B,GAA3B,CAAf;AACAT,OAAG,IAAH,EAAQD,KAAKW,SAAL,GAAiBR,IAAjB,GAAwBG,YAAxB,GAAuC,GAAvC,GAA4CN,KAAKO,YAAL,CAAkBC,KAAlB,CAAwB,GAAxB,EAA6BR,KAAKO,YAAL,CAAkBC,KAAlB,CAAwB,GAAxB,EAA6BC,MAA7B,GAAqC,CAAlE,CAApD;AACD;AAT8B,CAAnB,CAAd;;AAYA,IAAIG,SAAS,sBAAO;AAClBhB,WAAQA,OADU;AAElBiB,cAAW,oBAACd,GAAD,EAAKC,IAAL,EAAUC,EAAV,EAAiB;AAC1Ba,YAAQC,GAAR,CAAYf,IAAZ;AACA,QAAGA,KAAKgB,QAAL,IAAiB,YAAjB,IAAiChB,KAAKgB,QAAL,IAAiB,WAAlD,IAAiEhB,KAAKgB,QAAL,IAAiB,WAAlF,IAAiGhB,KAAKgB,QAAL,IAAiB,WAArH,EAAiI;AAC/Hf,SAAG,IAAH,EAAQ,IAAR;AACD,KAFD,MAGI;AACFA,SAAG,IAAIgB,KAAJ,CAAU,yBAAV,CAAH,EAAwC,KAAxC;AACD;AACF;AAViB,CAAP,EAWVC,MAXU,CAWH,SAXG,CAAb;;AAaO,IAAMC,oCAAc,SAAdA,WAAc,CAACpB,GAAD,EAAKqB,GAAL,EAASC,IAAT,EAAkB;AAC3CT,SAAOb,GAAP,EAAWqB,GAAX,EAAe,UAACE,GAAD,EAAS;AACjB,QAAGA,GAAH,EAAO;AACLR,cAAQC,GAAR,CAAY,WAASO,GAArB;AACA,aAAOF,IAAIG,IAAJ,CAAS,EAAC,WAAU,KAAX,EAAiB,WAAUD,GAA3B,EAAT,CAAP;AACD,KAHD,MAII;AACFD;AACD;AACT,GARC;AASD,CAVM;;AAYA,IAAMG,oCAAc,SAAdA,WAAc,CAACzB,GAAD,EAAKqB,GAAL,EAASC,IAAT,EAAkB;AAC3CP,UAAQC,GAAR,CAAYhB,IAAI0B,IAAhB,EAAsBX,QAAQC,GAAR,CAAY,cAAYW,KAAKC,SAAL,CAAe5B,IAAIC,IAAnB,CAAxB;AACtB,MAAGD,IAAI0B,IAAP,EAAY;AACV,QAAMG,WAAW,0BAAU7B,IAAI0B,IAAd,CAAjB;AACA,QAAG1B,IAAIC,IAAP,EAAY;AACV4B,eAASC,KAAT,GAAiB9B,IAAIC,IAAJ,CAAS8B,IAA1B;AACD;AACDF,aAASG,IAAT,CAAc,UAACT,GAAD,EAAKU,EAAL,EAAY;AACxB,UAAGV,GAAH,EAAQ;AACH,eAAOF,IAAIG,IAAJ,CAAS,EAACU,SAAQ,KAAT,EAAeC,SAAQ,uBAAvB,EAA+CZ,QAA/C,EAAT,CAAP;AACJ,OAFD,MAGI;AACF,eAAOF,IAAIG,IAAJ,CAAS;AACdU,mBAAQ,IADM;AAEdC,mBAAQ,kCAFM;AAGdF;AAHc,SAAT,CAAP;AAKD;AACF,KAXD;AAYD;AACF,CApBM;;AAsBA,IAAMG,oCAAc,SAAdA,WAAc,CAACpC,GAAD,EAAKqB,GAAL,EAASC,IAAT,EAAkB;AAC3C,MAAIe,SAAUrC,IAAIsC,IAAJ,CAASC,GAAvB;AACA,MAAIC,OAAOxC,IAAIsC,IAAJ,CAASG,KAApB;AACA,MAAID,QAAQH,MAAZ,EAAoB;AAClB,0BAAMK,MAAN,CACE,EAAEH,KAAIC,IAAN,EADF,EAEE,EAAEG,OAAM,EAAEC,WAAUP,MAAZ,EAAR,EAFF,EAGEQ,IAHF,CAGO,UAACtB,GAAD,EAAKU,EAAL,EAAY;AACjB,UAAGV,GAAH,EAAQ;AACN,eAAOF,IAAIG,IAAJ,CAAS,EAACU,SAAQ,KAAT,EAAeC,SAAQ,uBAAvB,EAA+CZ,QAA/C,EAAT,CAAP;AACJ,OAFE,MAGC;AACFD;AACD;AACC,KAVD;AAWD;AACF,CAhBM;;AAkBA,IAAMwB,oCAAc,SAAdA,WAAc,CAAC9C,GAAD,EAAKqB,GAAL,EAASC,IAAT,EAAkB;AAC3C,MAAIyB,KAAK/C,IAAI0B,IAAJ,CAASqB,EAAlB;AACAhC,UAAQC,GAAR,CAAY,gBAAeW,KAAKC,SAAL,CAAe5B,IAAI0B,IAAnB,CAA3B,EAAqDX,QAAQC,GAAR,CAAY,cAAYW,KAAKC,SAAL,CAAe5B,IAAIC,IAAnB,CAAxB;AACrD,MAAGD,IAAI0B,IAAP,EAAY;AACV,QAAI1B,IAAI0B,IAAJ,CAASI,KAAT,KAAmB,EAAvB,EAA2B;AACzBf,cAAQC,GAAR,CAAY,4BAAZ;AACAgC,kBAAYD,EAAZ;AACF;AACA,QAAG/C,IAAIC,IAAJ,IAAYD,IAAIC,IAAJ,KAAagD,SAAzB,IAAsCjD,IAAIC,IAAJ,KAAa,WAAtD,EAAkE;AAChED,UAAI0B,IAAJ,CAASI,KAAT,GAAiB9B,IAAIC,IAAJ,CAAS8B,IAA1B;AACAiB,kBAAYD,EAAZ;AACD;AACD,0BAAMG,gBAAN,CACE,EAAEX,KAAIQ,EAAN,EADF,EAEE,EAAEI,MAAKnD,IAAI0B,IAAX,EAFF,EAGE,EAAE,OAAM,IAAR,EAHF,EAIE0B,QAJF,CAIW,QAJX,EAIqBP,IAJrB,CAI0B,UAACtB,GAAD,EAAKU,EAAL,EAAY;AACpC,UAAGV,GAAH,EAAQ;AACH,eAAOF,IAAIG,IAAJ,CAAS,EAACU,SAAQ,KAAT,EAAeC,SAAQ,uBAAvB,EAA+CZ,QAA/C,EAAT,CAAP;AACJ,OAFD,MAGI;AACF,eAAOF,IAAIG,IAAJ,CAAS;AACdU,mBAAQ,IADM;AAEdC,mBAAQ,oCAFM;AAGdF;AAHc,SAAT,CAAP;AAKD;AACF,KAfD;AAgBD;AACF,CA7BM;;AA+BA,IAAMe,oCAAc,SAAdA,WAAc,CAACD,EAAD,EAAQ;AAChC,wBAAMM,OAAN,CAAc,EAACd,KAAIQ,EAAL,EAAd,EAAwB,OAAxB,EAAiCF,IAAjC,CAAsC,UAACtB,GAAD,EAAKU,EAAL,EAAY;AAChD,QAAGV,GAAH,EAAQ,MAAMA,GAAN;AACRR,YAAQC,GAAR,CAAY,kBAAiBiB,EAA7B;AACA,iBAAGqB,MAAH,CAAUrB,GAAGH,KAAb,EAAoB,UAACP,GAAD,EAAS;AAC5B,UAAIA,GAAJ,EAAS;AACTR,cAAQC,GAAR,CAAeiB,GAAGH,KAAlB;AACD,KAHA;AAKD,GARD;AASF,CAVM;;AAYA,IAAMyB,sCAAe,SAAfA,YAAe,CAACvD,GAAD,EAAKqB,GAAL,EAAa;AACvCN,UAAQC,GAAR,CAAY,mBAAiBW,KAAKC,SAAL,CAAe5B,IAAIwD,MAAnB,CAA7B;AACA,MAAIC,OAAOC,SAAS1D,IAAIwD,MAAJ,CAAWC,IAApB,CAAX;AACA,MAAIE,QAAQD,SAAS1D,IAAIwD,MAAJ,CAAWG,KAApB,CAAZ;AACA,MAAGF,QAAQE,KAAX,EAAiB;AACfA,YAAQA,QAAQ,EAAR,GAAaA,KAAb,GAAqB,EAA7B;AACA,QAAIC,aAAcH,OAAOE,KAAR,GAAiBA,KAAlC;AACA,0BAAME,IAAN,GAAaF,KAAb,CAAmBA,KAAnB,EAA0BG,IAA1B,CAA+BF,UAA/B,EAA2CR,QAA3C,CAAoD,QAApD,EAA8DP,IAA9D,CAAmE,UAACtB,GAAD,EAAKU,EAAL,EAAY;AAC7E,UAAGV,GAAH,EAAQ;AACN,eAAOF,IAAIG,IAAJ,CAAS,EAACU,SAAQ,KAAT,EAAeC,SAAQ,uBAAvB,EAAT,CAAP;AACD,OAFD,MAGI;AACFpB,gBAAQC,GAAR,CAAY,YAAUhB,IAAI+D,KAA1B;AACA,eAAO1C,IAAIG,IAAJ,CAAS;AACdU,mBAAQ,IADM;AAEdC,mBAAQ,qCAFM;AAGd4B,iBAAM/D,IAAI+D,KAHI;AAId9B;AAJc,SAAT,CAAP;AAMD;AACF,KAbD;AAcD,GAjBD,MAkBK;AACH,WAAOZ,IAAIG,IAAJ,CAAS,EAACU,SAAQ,KAAT,EAAeC,SAAQ,uBAAvB,EAAT,CAAP;AACD;AACF,CAzBM;;AA2BA,IAAM6B,8CAAmB,SAAnBA,gBAAmB,CAACjB,EAAD,EAAQ;AACtC,MAAGA,EAAH,EAAM;AACL,6BAASgB,KAAT,CAAe,EAACtB,OAAMM,EAAP,EAAf,EAA2BF,IAA3B,CAAgC,UAACtB,GAAD,EAAKwC,KAAL,EAAe;AAC7C,aAAOA,KAAP;AACD,KAFD;AAGA;AACD,CANK;;AAQA,IAAME,sCAAe,SAAfA,YAAe,CAACjE,GAAD,EAAKqB,GAAL,EAAa;AACvC,MAAI0B,KAAK/C,IAAIwD,MAAJ,CAAWT,EAApB;AACAhC,UAAQC,GAAR,CAAY,mBAAiB+B,EAA7B;AACA,MAAGA,EAAH,EAAM;AACJ,0BAAMM,OAAN,CAAc,EAACd,KAAIQ,EAAL,EAAd,EAAwBK,QAAxB,CAAiC,QAAjC,EAA2CP,IAA3C,CAAgD,UAACtB,GAAD,EAAKU,EAAL,EAAY;AAC1D,UAAGV,GAAH,EAAQ;AACN,eAAOF,IAAIG,IAAJ,CAAS,EAACU,SAAQ,KAAT,EAAeC,SAAQ,uBAAvB,EAAT,CAAP;AACD,OAFD,MAGI;AACF,YAAGF,EAAH,EAAM;AACJ,mCAAS8B,KAAT,CAAe,EAACtB,OAAMM,EAAP,EAAf,EAA2BF,IAA3B,CAAgC,UAACtB,GAAD,EAAKwC,KAAL,EAAe;AAC7C,mBAAO1C,IAAIG,IAAJ,CAAS;AACdU,uBAAQ,IADM;AAEdC,uBAAQ,oCAFM;AAGd+B,6BAAcH,KAHA;AAId9B;AAJc,aAAT,CAAP;AAMD,WAPD;AAQD,SATD,MAUI;AACF,iBAAOZ,IAAIG,IAAJ,CAAS,EAACU,SAAQ,KAAT,EAAeC,SAAQ,0BAAvB,EAAT,CAAP;AACD;AACF;AACF,KAnBD;AAoBD,GArBD,MAsBI;AACF,WAAOd,IAAIG,IAAJ,CAAS,EAACU,SAAQ,KAAT,EAAeC,SAAQ,8BAAvB,EAAT,CAAP;AACD;AACF,CA5BM;;AA8BA,IAAMgC,4CAAkB,SAAlBA,eAAkB,CAACnE,GAAD,EAAKqB,GAAL,EAAa;AAC1C,MAAI0B,KAAK/C,IAAIwD,MAAJ,CAAWT,EAApB;AACAhC,UAAQC,GAAR,CAAY,sBAAoB+B,EAAhC;AACA,MAAGA,MAAMA,OAAO,EAAb,IAAmBA,OAAOE,SAA7B,EAAuC;AACrC,0BAAMmB,iBAAN,CAAwBrB,EAAxB,EAA2B,UAACxB,GAAD,EAAKU,EAAL,EAAY;AACrC,UAAGV,GAAH,EAAQ;AACN,eAAOF,IAAIG,IAAJ,CAAS,EAACU,SAAQ,KAAT,EAAeC,SAAQ,uBAAvB,EAAT,CAAP;AACD,OAFD,MAGI;AACF,YAAGF,EAAH,EAAM;AACJ,iBAAOZ,IAAIG,IAAJ,CAAS,EAACU,SAAQ,IAAT,EAAcC,SAAQ,oCAAtB,EAA2DF,MAA3D,EAAT,CAAP;AACD,SAFD,MAGI;AACF,iBAAOZ,IAAIG,IAAJ,CAAS,EAACU,SAAQ,KAAT,EAAeC,SAAQ,0BAAvB,EAAT,CAAP;AACD;AACF;AACF,KAZD;AAaD;AACF,CAlBM;;AAoBA,IAAMkC,4CAAkB,SAAlBA,eAAkB,CAACrE,GAAD,EAAKqB,GAAL,EAAa;AAC1CN,UAAQC,GAAR,CAAY,kBAAZ;AACA,wBAAM6C,IAAN,GAAaS,IAAb,CAAkB,YAAlB,EAAgClB,QAAhC,CAAyC,QAAzC,EAAmDO,KAAnD,CAAyD,CAAzD,EAA4Dd,IAA5D,CAAiE,UAACtB,GAAD,EAAKU,EAAL,EAAY;AAC3E,QAAGV,GAAH,EAAQ;AACN,aAAOF,IAAIG,IAAJ,CAAS,EAACU,SAAQ,KAAT,EAAeC,SAAQ,uBAAvB,EAAT,CAAP;AACD,KAFD,MAGI;AACF,aAAOd,IAAIG,IAAJ,CAAS,EAACU,SAAQ,IAAT,EAAcC,SAAQ,qCAAtB,EAA4DF,MAA5D,EAAT,CAAP;AACD;AACF,GAPD;AAQD,CAVM;;AAYA,IAAMsC,oCAAc,SAAdA,WAAc,CAACvE,GAAD,EAAKqB,GAAL,EAASC,IAAT,EAAkB;AAC3CP,UAAQC,GAAR,CAAY,eAAZ;AACA,wBAAM+C,KAAN,GAAclB,IAAd,CAAmB,UAACtB,GAAD,EAAKwC,KAAL,EAAe;AAChC,QAAGxC,GAAH,EAAQ;AACN,aAAOF,IAAIG,IAAJ,CAAS,EAACU,SAAQ,KAAT,EAAeC,SAAQ,uBAAvB,EAAT,CAAP;AACD,KAFD,MAGI;AACFnC,UAAI+D,KAAJ,GAAYA,KAAZ;AACAzC;AACD;AACF,GARD;AASD,CAXM;;AAaA,IAAMkD,sCAAe,SAAfA,YAAe,CAACxE,GAAD,EAAKqB,GAAL,EAAa;AACvCN,UAAQC,GAAR,CAAY,mBAAkBW,KAAKC,SAAL,CAAe5B,IAAIwD,MAAnB,CAA9B;AACA,MAAIiB,IAAIzE,IAAIwD,MAAJ,CAAWiB,CAAnB;AACA,MAAIC,SAASC,KAAK,QAAMF,CAAN,GAAQ,MAAb,CAAb;AACA,MAAIG,QAAQ,EAACC,QAAOH,MAAR,EAAZ;AACA,MAAGD,KAAKA,MAAM,EAAd,EAAiB;AACf,0BAAMZ,IAAN,CAAW,EAACiB,KAAI,CAAC,EAACC,OAAMH,KAAP,EAAD,EAAe,EAACI,SAAQJ,KAAT,EAAf,CAAL,EAAX,EACMjB,KADN,CACY,EADZ,EAEMd,IAFN,CAEW,UAACtB,GAAD,EAAKU,EAAL,EAAY;AAChB,UAAGV,GAAH,EAAQ;AACN,eAAOF,IAAIG,IAAJ,CAAS,EAACU,SAAQ,KAAT,EAAeC,SAAQ,uBAAvB,EAAT,CAAP;AACD,OAFD,MAGI;AACF,YAAG,CAACF,EAAD,IAAOA,OAAO,IAAjB,EAAsB;AACpB,iBAAOZ,IAAIG,IAAJ,CAAS,EAACU,SAAQ,IAAT,EAAcC,SAAQ,kBAAtB,EAAT,CAAP;AACD,SAFD,MAGI;AACF,iBAAOd,IAAIG,IAAJ,CAAS,EAACU,SAAQ,IAAT,EAAcC,SAAQ,qCAAtB,EAA4D4B,OAAM9B,GAAGvB,MAArE,EAA4EuB,MAA5E,EAAT,CAAP;AACD;AACF;AACF,KAdN;AAeD,GAhBD,MAiBI;AACF,WAAOZ,IAAIG,IAAJ,CAAS,EAACU,SAAQ,KAAT,EAAeC,SAAQ,sBAAvB,EAAT,CAAP;AACD;AACF,CAzBM;;AA2BA,IAAM8C,8CAAmB,SAAnBA,gBAAmB,CAACjF,GAAD,EAAKqB,GAAL,EAAa;AAC3CN,UAAQC,GAAR,CAAY,uBAAsBW,KAAKC,SAAL,CAAe5B,IAAI0B,IAAnB,CAAlC;AACA,MAAG1B,IAAI0B,IAAP,EAAY;AACV,0BAAMwD,MAAN,CAAa,EAAE3C,KAAI,EAAC4C,KAAInF,IAAI0B,IAAT,EAAN,EAAb,EAAsCmB,IAAtC,CAA2C,UAACtB,GAAD,EAAS;AAClD,UAAGA,GAAH,EAAQ;AACN,eAAOF,IAAIG,IAAJ,CAAS,EAACU,SAAQ,KAAT,EAAeC,SAAQ,uBAAvB,EAA+CZ,QAA/C,EAAT,CAAP;AACD,OAFD,MAGK;AACH,eAAOF,IAAIG,IAAJ,CAAS,EAACU,SAAQ,IAAT,EAAcC,SAAQ,qCAAtB,EAAT,CAAP;AACD;AACF,KAPD;AAQD;AACF,CAZM;;AAeA,IAAMiD,sCAAe,SAAfA,YAAe,CAACpF,GAAD,EAAKqB,GAAL,EAAa;AACvCN,UAAQC,GAAR,CAAY,mBAAkBW,KAAKC,SAAL,CAAe5B,IAAIwD,MAAnB,CAA9B;AACA,MAAI6B,QAAQrF,IAAIwD,MAAJ,CAAWiB,CAAvB;AACC,MAAIY,KAAJ,EAAW;AACV,QAAIC,MAAM,OAAKD,KAAL,GAAW,IAArB;AACAzF,aAAS8E,MAAT,CAAgB;AACda,aAAM,EADQ;AAEd7D,YAAK;AACH,iBAAS;AACP,oBAAU;AACR,qBAAS4D;AADD;AADH;AADN;AAFS,KAAhB,EASGE,IATH,CASQ,UAAUC,IAAV,EAAgB;AACtB,UAAIC,OAAOD,KAAKC,IAAL,CAAUA,IAArB,CAA0B3E,QAAQC,GAAR,CAAYW,KAAKC,SAAL,CAAe6D,IAAf,CAAZ;AAC1B,aAAOpE,IAAIG,IAAJ,CAASiE,IAAT,CAAP;AACH,KAZC,EAYC,UAAUlE,GAAV,EAAe;AACdR,cAAQ4E,KAAR,CAAcpE,IAAIY,OAAlB;AACH,KAdC;AAeA;AACH,CArBM","file":"qBank.server.controller.js","sourcesContent":["// ./user-expressjs-backend/controllers/qBank.server.controller.js\nimport multer from 'multer';\nimport fs from 'fs';\nimport User from '../models/user.server.model';\nimport qBank from '../models/qBank.server.model';\nimport Question from '../models/question.server.model';\nimport elasticClient from '../config/esSearchConfig';\nconst esClient = elasticClient;\n\n//set multer storage\nvar storage = multer.diskStorage({\n  destination:(req,file,cb) => {\n    cb(null,'./public/questionBankImages');\n  },\n  filename:(req,file,cb) => {\n    let date = Date.now();\n    let newImageName = file.originalname.split('.')[file.originalname.split('.').length - 2];\n    newImageName = newImageName.replace(/ /g, '_');\n    cb(null,file.fieldname + date + newImageName + '.' +file.originalname.split('.')[file.originalname.split('.').length -1] );\n  }\n});\n\nvar Upload = multer({\n  storage:storage,\n  fileFilter:(req,file,cb) => {\n    console.log(file);\n    if(file.mimetype == 'image/jpeg' || file.mimetype == 'image/jpg' || file.mimetype == 'image/png' || file.mimetype == 'image/bmp'){\n      cb(null,true);\n    }\n    else{\n      cb(new Error('Only Image File Allowed'),false);\n    }\n  }\n}).single('qBImage');\n\nexport const UploadImage = (req,res,next) => {\n  Upload(req,res,(err) => {\n         if(err){\n           console.log('ERROR:'+err);\n           return res.json({'success':false,'message':err});\n         }\n         else{\n           next();\n         }\n});\n}\n\nexport const createQbank = (req,res,next) => {\n  console.log(req.body);console.log('req.file:'+JSON.stringify(req.file));\n  if(req.body){\n    const newQbank = new qBank(req.body);\n    if(req.file){\n      newQbank.image = req.file.path;\n    }\n    newQbank.save((err,qb) => {\n      if(err) {\n           return res.json({success:false,message:'Something going wrong',err});\n      }\n      else{\n        return res.json({\n          success:true,\n          message:'Question Bank Added Successfully',\n          qb\n        });\n      }\n    });\n  }\n}\n\nexport const addQuestoQb = (req,res,next) => {\n  let quesId  = req.ques._id;\n  let qbId = req.ques.qbank;\n  if (qbId && quesId) {\n    qBank.update(\n      { _id:qbId },\n      { $push:{ questions:quesId } }\n    ).exec((err,qb) => {\n      if(err) {\n        return res.json({success:false,message:'Something going wrong',err});\n   }\n   else{\n     next();\n   }\n    });\n  }\n};\n\nexport const updateQbank = (req,res,next) => {\n  let id = req.body.id\n  console.log('updateQbank'+ JSON.stringify(req.body));console.log('req.file:'+JSON.stringify(req.file));\n  if(req.body){\n    if (req.body.image === \"\") {\n      console.log('---REMOVE IMAGE STARTED---');\n      removeImage(id);\n   }\n    if(req.file && req.file !== undefined && req.file !== 'undefined'){\n      req.body.image = req.file.path;\n      removeImage(id);\n    }\n    qBank.findOneAndUpdate(\n      { _id:id },\n      { $set:req.body },\n      { 'new':true }\n    ).populate('author').exec((err,qb) => {\n      if(err) {\n           return res.json({success:false,message:'Something going wrong',err});\n      }\n      else{\n        return res.json({\n          success:true,\n          message:'Question Bank Updated Successfully',\n          qb\n        });\n      }\n    });\n  }\n}\n\nexport const removeImage = (id) => {\n   qBank.findOne({_id:id}, 'image').exec((err,qb) => {\n     if(err) throw err;\n     console.log('removeImage: '+ qb);\n     fs.unlink(qb.image, (err) => {\n      if (err) return;\n      console.log(`${qb.image} was deleted`);\n    });\n    \n   })\n}\n\nexport const getAllQbanks = (req,res) => {\n  console.log('getAllQbanks: '+JSON.stringify(req.params));\n  let page = parseInt(req.params.page);\n  let limit = parseInt(req.params.limit);\n  if(page && limit){\n    limit = limit < 30 ? limit : 30;\n    let skip_value = (page * limit) - limit;\n    qBank.find().limit(limit).skip(skip_value).populate('author').exec((err,qb) => {\n      if(err) {\n        return res.json({success:false,message:'Something going wrong'});\n      }\n      else{\n        console.log('count: '+req.count);\n        return res.json({\n          success:true,\n          message:'Question Banks Fetched Successfully',\n          count:req.count,\n          qb\n        });\n      }\n    })\n  }\n  else {\n    return res.json({success:false,message:'Something going wrong'});\n  }\n}\n\nexport const countQbQuestions = (id) => {\n  if(id){\n   Question.count({qbank:id}).exec((err,count) => {\n     return count;\n   })\n  }\n }\n\nexport const getqBankById = (req,res) => {\n  let id = req.params.id;\n  console.log('getqBankById: '+id);\n  if(id){\n    qBank.findOne({_id:id}).populate('author').exec((err,qb) => {\n      if(err) {\n        return res.json({success:false,message:'Something going wrong'});\n      }\n      else{\n        if(qb){\n          Question.count({qbank:id}).exec((err,count) => {\n            return res.json({\n              success:true,\n              message:'Question Bank Fetched Successfully',\n              noOfQuestions:count,\n              qb\n            });\n          })\n        }\n        else{\n          return res.json({success:false,message:'Question Banks Not Found'});\n        }\n      }\n    })\n  }\n  else{\n    return res.json({success:false,message:'Question Bank Id is required'});\n  }\n}\n\nexport const deleteqBankById = (req,res) => {\n  let id = req.params.id;\n  console.log('deleteqBankById: '+id);\n  if(id && id !== '' && id !== undefined){\n    qBank.findByIdAndRemove(id,(err,qb) => {\n      if(err) {\n        return res.json({success:false,message:'Something going wrong'});\n      }\n      else{\n        if(qb){\n          return res.json({success:true,message:'Question Bank Deleted Successfully',qb});\n        }\n        else{\n          return res.json({success:false,message:'Question Banks Not Found'});\n        }\n      }\n    })\n  }\n}\n\nexport const getLatestqBanks = (req,res) => {\n  console.log('getLatestqBanks:');\n  qBank.find().sort('-createdAt').populate('author').limit(3).exec((err,qb) => {\n    if(err) {\n      return res.json({success:false,message:'Something going wrong'});\n    }\n    else{\n      return res.json({success:true,message:'Question Banks Fetched Successfully',qb});\n    }\n  })\n}\n\nexport const countQbanks = (req,res,next) => {\n  console.log('countQbanks: ');\n  qBank.count().exec((err,count) => {\n    if(err) {\n      return res.json({success:false,message:'Something going wrong'});\n    }\n    else{\n      req.count = count;\n      next();\n    }\n  })\n}\n\nexport const searchQbanks = (req,res) => {\n  console.log('searchQbanks: '+ JSON.stringify(req.params));\n  let q = req.params.q;\n  let search = eval('/.*'+q+'.*/i');\n  let regex = {$regex:search};\n  if(q && q !== ''){\n    qBank.find({$or:[{title:regex},{summary:regex}]})\n         .limit(20)\n         .exec((err,qb) => {\n           if(err) {\n             return res.json({success:false,message:'Something going wrong'});\n           }\n           else{\n             if(!qb || qb === null){\n               return res.json({success:true,message:'No Matches found'})\n             }\n             else{\n               return res.json({success:true,message:'Question Banks Fetched Successfully',count:qb.length,qb});\n             }\n           }\n         })\n  }\n  else{\n    return res.json({success:false,message:'Enter text to search'});\n  }\n}\n\nexport const multipleDeleteQb = (req,res) => {\n  console.log('multipleDeleteQb: '+ JSON.stringify(req.body));\n  if(req.body){\n    qBank.remove({ _id:{$in:req.body } }).exec((err) => {\n      if(err) {\n        return res.json({success:false,message:'Something going wrong',err});\n      }\n      else {\n        return res.json({success:true,message:'Question Banks Deleted Successfully'});\n      }\n    })\n  }\n}\n\n\nexport const searchQbInEs = (req,res) => {\n  console.log('searchQbInEs: '+ JSON.stringify(req.params));\n  let input = req.params.q;\n   if (input) {\n    let rxp = '.*'+input+'.*';\n    esClient.search({\n      index:'',\n      body:{\n        \"query\": {\n          \"regexp\": {\n            \"title\": rxp\n          }\n        }\n      }\n    }).then(function (resp) {\n      var hits = resp.hits.hits;console.log(JSON.stringify(resp));\n      return res.json(resp);\n  }, function (err) {\n      console.trace(err.message);\n  });\n   }\n} \n"]}